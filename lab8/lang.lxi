%{
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>

    int lines = 1;
%}

%option noyywrap
%option caseless

DIGIT               [0-9]
NON_ZERO_DIGIT      [1-9]
LETTER              [a-zA-Z]
IDENTIFIER          [a-zA-Z_][a-zA-Z0-9_]*
CHAR                \'[a-zA-Z0-9]\'
INTEGER             0|[+|-]?[1-9][0-9]*
STRING              \"[a-zA-Z0-9]*\"

%%

"if"|"else"|"while"|"for"|"integer"|"string"|"char"|"read"|"print"|"return" {printf("%s - reserved word\n", yytext);}

"<-"|"+"|"-"|"*"|"/"|"%"|"<="|">="|"=="|"!="|"<"|">"|"=" {printf("%s - operator\n", yytext);}

"{"|"}"|"("|")"|"["|"]"|":"|";"|","|"'"|"\"|":"" {printf("%s - separator\n", yytext);}

{IDENTIFIER} {printf("%s - identifier\n", yytext);}
{INTEGER} {printf("%s - integer\n", yytext);}
{STRING} {printf("%s - string\n",yytext);}
{CHAR} {printf("%s - character\n", yytext);}

[ \t]+  {}
[\n]+   {lines++;}

[0-9][a-zA-Z0-9_]*		                                        {printf("Illegal identifier at line %d\n", lines);}
[+|-]0		                                                   	 {printf("Illegal numeric constant at line %d\n", lines);}

%%

int main(int argc, char** argv) {
    if (argc > 1) {
        FILE* file;
        file = fopen(argv[1], "r");
        if (!file) {
            fprintf(stderr, "Could not open %s!\n", argv[1]);
            exit(1);
        }
        yyin = file;
    }

    yylex();
    return 0;
}
