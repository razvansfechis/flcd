program = {statement}
statement = {assign_statement | declaration_statement | if_statement | while_statement | for_statement } 

identifier = (letter|"_"){letter|digit|"_"}
letter = "A"|"B"|..|"Z"|"a"|"b"|..|"z"
digit = "0"|"1"|..|"9"
non_zero_digit = "1"|"2"|..|"9"
integer = ["+"|"-"]non_zero_digit{digit} | "0"
char = "'"letter|digit"'"
boolean = "true" | "false"

array_decl_statement = "[" integer { "," integer } "]" ":" data_type
array_assign_statement = "{" identifer | digit | boolean "}"

string = """{char}"""

constant = integer | boolean | string | char | array 

expression = identifier ("+" | "-") identifier { ("+" | "-") identifier } | identifier

declaration_statement = identifier ":" data_type
assign_statement = identifier "<-" expression ";"

data_type = "integer" | "string" | "char" | "boolean" | "array"
identifier = identifier | array "[" number "]"
condition = expression {"||" | "&&" expression }

iostmt = read identifier | write identifier | write constant

simple_statement = assign_statement | "read" | "write"

statement = simple_statement | struct_statement ";"
compound_statement = {declaration_statement ";"} statement | {declaration_statement ";"} statement ";" compound_statement ";"

struct_statement = if_statement | while_statement | for_statement

relation = ">" | "<" | ">=" | "<=" | "==" | "!="

if_statement = "if" "(" condition ")" "{" compound_statement "}" { ("else" "{" compound_statement "}" ) | ("else if" "{" compound_statement "}")
while_statement = "while" "(" condition ")" "{" compound_statement" "}"
for_statement = "for" "(" assign_statement condition ";" condition; compound_statement ")" "{" compound_statement "}";